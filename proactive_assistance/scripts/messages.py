"""
This script contains the definition of all possible messages that can be send
between robot and glasses
"""
import time
from utils import send_UDP

class RobotMessage():

    """
    Here is the taxonomy of all messages that the robot can send to the ego 
    vision system. Each message send by the robot must be time stamped with
    the system time of the robot in nanoseconds:

        1 - Type: camera
            - messages: positive, negative, neutral

        2 - Type: microphone
            - messages: start, finish, butter, jam, milk, nutella, tomato
            
            (only for human2human experiments)
            - messages: moving, stopping, waiting, continuing
            
        3 - Type: movement (the robot is supposed to send these)
            - messages: start, finish

    """
    def __init__(self, type, message, robotTime_ns, frameIdx = None):

        if type != "camera" and type != "microphone" and type != "movement":
            raise ValueError("type must be 'camera,'microphone' or 'movement'")
        
        self.type = type
        self.message = message
        self.robotTime_ns = robotTime_ns
        self.frameIdx = frameIdx
        return
    
if __name__ == '__main__':

    """
    This main just sends serialized RobotMessage objects through 
    a UDP connection. It can be used to test the communications.py 
    receiver. (careful with the IP address)
    """

    # create some messages simulating the ones generated by the robot
    
    # msg1 = RobotMessage("microphone", "start", time.time_ns())
    # msg2 = RobotMessage("microphone", "finish", time.time_ns())
    # msg3 = RobotMessage("camera", "neutral", time.time_ns())
    # msg4 = RobotMessage("movement", "start", time.time_ns())
    # msg5 = RobotMessage("movement", "finish", time.time_ns())
    msg6 = RobotMessage("microphone", "jam", 0)

    # send the messages
    send_UDP("192.168.147.153", 5005, msg6)